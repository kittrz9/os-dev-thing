#!/bin/sh

set -xe

ORIGIN_DIR="$(readlink -f "$(dirname "$0")")"
export ORIGIN_DIR

# I don't think you can use the source command in posix sh
# so I gotta use this instead
# https://stackoverflow.com/questions/11588583/is-the-shells-source-posix-standard
. ./get-tools.sh

cd "$ORIGIN_DIR"

if [ -z "$(command -v "$LD")" ]; then
	echo "cross compiler not found"
	exit 1
fi

CFLAGS="$CFLAGS -g -Wall -Wextra -Wpedantic -std=gnu99 -ffreestanding -fPIE -march=i686"
LDFLAGS="$LDFLAGS -nostdlib -static --no-dynamic-linker -z text -z max-page-size=0x1000"
INCLUDES="$INCLUDES "
DEFINES="$DEFINES "

rm -rf build/ obj/
mkdir -p build/ obj/

OBJS=""

CFILES=$(find src/ -name "*.c")
ASMFILES=$(find src/ -name "*.s")

. ./src/stage2/build.sh

# incredibly jank solution to getting the stage2 size into boot.s lmao
# also now requires stage2 to be built before boot.s but whatever
SECTOR_COUNT="$(python -c "import os; import math; a=os.path.getsize(\"build/stage2.bin\");print(math.ceil(a/512))")"
sed src/boot.s -e "s/^stage2size.*/stage2size equ $SECTOR_COUNT ; autogenerated, dont touch/" > build/temp.s
cat build/temp.s > src/boot.s

nasm -fbin src/boot.s -o build/boot.bin

# combine bootsector and stage2
cat build/boot.bin build/stage2.bin > build/os.bin

